
## 泛型编程

泛型编程（Generic Programming）是一种编程范式，它通过使用参数化类型（Parameterized Types）和参数化函数（Parameterized Functions）来实现通用的算法和数据结构。泛型编程的核心思想是将算法和数据结构与具体的数据类型解耦合，使得代码能够适用于多种数据类型，提高代码的重用性和可扩展性。典型代表语言：C++、Rust。

泛型编程的目的是编写可以在不考虑具体数据类型的情况下工作的代码，从而提高代码的复用性和性能。泛型编程通过使用类型参数（或称为模板参数）来实现通用性。类型参数可以在代码中用于定义变量、函数或类，从而使它们能够适用于多种不同的数据类型。通过泛型编程，可以实现在编译时对类型进行检查，提供更好的类型安全性，并避免代码中的类型转换。

OOP 将data和methods关联在一起

GP将data和methods分开来